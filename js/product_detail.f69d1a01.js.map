{"version":3,"file":"js/product_detail.f69d1a01.js","mappings":"mLAGA,MAAMA,GAAYC,EAAAA,EAAAA,KAELC,EAAkB,CAG3BC,oBACI,IAAIC,EAAO,qBACX,IACI,IAAIC,QAAYC,EAAAA,EAAWC,QAAQ,CAAEH,QACrC,IAAIC,EAAK,KAAM,CAACG,IAAK,yCAAyCC,MAAOJ,GAErE,OAAOA,CAEX,CAAE,MAAOI,GACL,IAAIC,EAAgB,SAAQD,EAAME,UAAUC,WAAWH,EAAME,UAAUE,oBAAoBT,qBAAuBU,KAAKC,UAAUN,EAAME,UAAUK,QACjJ,MAAM,IAAIC,MAAMP,EACpB,CACJ,EAGAP,oBAAoBe,GAChB,IAAId,EAAO,wCACX,IAEQJ,EAAUmB,OAAOnB,EAAUoB,WAE/B,IAAIC,EAAU,CACVjB,MACAkB,OAAQ,OACRH,MAAOnB,EAAUmB,MACjBH,KAAME,GAINb,QAAYC,EAAAA,EAAWC,QAAQc,GAEnC,IAAIhB,EAAK,KAAM,CAACG,IAAK,qCAAqCC,MAAOJ,GAEjE,OAAOA,CAEX,CAAE,MAAOI,GACL,IAAIC,EAAgB,SAAQD,EAAME,UAAUC,WAAWH,EAAME,UAAUE,oBAAoBT,qBAAuBU,KAAKC,UAAUN,EAAME,UAAUK,QACjJ,MAAM,IAAIC,MAAMP,EACpB,CACJ,EAGAP,mBAAmBoB,GACf,IAAInB,EAAO,sBAAqBmB,IAChC,IAEQvB,EAAUmB,OAAOnB,EAAUoB,WAE/B,IAAIC,EAAU,CACVjB,MACAe,MAAOnB,EAAUmB,OAEjBd,QAAYC,EAAAA,EAAWC,QAAQc,GACnC,IAAIhB,EAAK,KAAM,CAACG,IAAK,qCAAqCC,MAAOJ,GAEjE,OAAOA,CAEX,CAAE,MAAOI,GACL,IAAIC,EAAgB,SAAQD,EAAME,UAAUC,WAAWH,EAAME,UAAUE,oBAAoBT,qBAAuBU,KAAKC,UAAUN,EAAME,UAAUK,QACjJ,MAAM,IAAIC,MAAMP,EACpB,CACJ,EAGAP,wBAAwBqB,GAEhBxB,EAAUmB,OAAOnB,EAAUoB,WAE/B,IAAIC,EAAU,CACVjB,IAAK,wCACLkB,OAAQ,OACRH,MAAOnB,EAAUmB,MACjBH,KAAM,CAAEQ,QAASA,IAGrB,IACI,IAAInB,QAAYC,EAAAA,EAAWC,QAAQc,GACnC,IAAIhB,EAAK,KAAM,CAACG,IAAK,qCAAqCC,MAAOJ,GAEjE,OAAOA,CAEX,CAAE,MAAOI,GACL,IAAIC,EAAgB,SAAQD,EAAME,UAAUC,WAAWH,EAAME,UAAUE,oBAAoBQ,EAAQjB,uBAAuBU,KAAKC,UAAUN,EAAME,UAAUK,QACzJ,MAAM,IAAIC,MAAMP,EACpB,CACJ,EAGAP,kBAAkBsB,GACd,IACI,IAAIC,EAAWD,EAAKE,KAAIC,GAAMC,KAAKC,aAAaF,EAAGL,MAC/CQ,QAAqBC,QAAQC,IAAIP,GAErC,GAA2B,IAAxBK,EAAaG,OAAc,KAAM,CAAC1B,IAAK,mCAC1C,OAAOuB,CAEX,CAAE,MAAOtB,GACL,IAAIC,EAAgB,SAAQD,EAAME,UAAUC,WAAWH,EAAME,UAAUE,8BAA8BC,KAAKC,UAAUN,EAAME,UAAUK,QACpI,MAAM,IAAIC,MAAMP,EACpB,CACJ,EAGAyB,kBAAkBV,EAAKW,GACnB,IAQI,OAPAX,EAAKY,SAAQC,IACTF,EAAKC,SAAQE,IACLD,EAAQf,KAAOgB,EAAKhB,KACpBe,EAAQE,MAAQD,EAAKC,MACzB,GACF,IAECf,CAEX,CAAE,MAAOhB,GACL,IAAIC,EAAe,CAACF,IAAK,6BAA8BC,SACvD,MAAM,IAAIQ,MAAMP,EACpB,CACJ,EAGA+B,qBAAqBhB,GACjB,IAEI,MAAMiB,EAAO,GAYb,OAXAjB,EAAKY,SAAQC,IACT,MAAMC,EAAOD,EACPK,EAAU,CACZC,oBAAqBL,EAAKhB,GAC1BsB,MAAM,IAAIC,MAAOC,cAAcC,MAAM,EAAE,IACvCC,KAAMV,EAAKC,MACXU,OAAQX,EAAKC,MAAQD,EAAKW,OAAOC,YAEnCT,EAAKU,KAAKT,EAAQ,IAGjBD,CAEX,CAAE,MAAOjC,GACL,IAAIC,EAAe,CAACF,IAAK,6BAA8BC,SACvD,MAAM,IAAIQ,MAAMP,EACpB,CACJ,EAGA2C,2BAA2B5B,GACvB,IACI,IAAI6B,EAAa,EAIjB,OAHA7B,EAAKY,SAAQC,IACLgB,GAAchB,EAAQE,MAAMF,EAAQY,KAAK,IAE1CI,CAEX,CAAE,MAAO7C,GACL,IAAIC,EAAe,CAACF,IAAK,6BAA8BC,SACvD,MAAM,IAAIQ,MAAMP,EACpB,CACJ,E,+PCvJE6C,GAAOC,EAAAA,EAAAA,KACPC,GAAiBC,EAAAA,EAAAA,KAAI,GAKrBC,EAAgBA,KACpBC,IACAL,EAAKM,WAAWC,EAAMvB,MACtBwB,EAAM,UAAU,EAEZC,EAAiBA,KACrBJ,IACAL,EAAKU,cAAcH,EAAMvB,MACzBwB,EAAM,UAAU,EAGZH,EAAgBA,KAClBH,EAAeS,OAAQ,EACvBC,YAAW,KACPV,EAAeS,OAAQ,CAAK,GAC9B,IAAI,EAGJ1B,GAAQ4B,EAAAA,EAAAA,KAAS,KACrB,MAAM9B,EAAUiB,EAAKc,MAAMC,MAAKhC,GAAWA,EAAQf,KAAOuC,EAAMvB,KAAKhB,KACrE,OAAOe,EAAUA,EAAQE,MAAQ,CAAC,I,qWCrCpC,MAAM+B,EAAc,EAEpB,O,0iCCkEA,MAAMvE,GAAYC,EAAAA,EAAAA,KAEZuE,GAAQC,EAAAA,EAAAA,MACRC,GAASC,EAAAA,EAAAA,MAmBTC,GAAgBlB,EAAAA,EAAAA,IAAI,KAS1BmB,EAAAA,EAAAA,KAAc1E,UACV,IACI,IAAIqB,EAAUgD,EAAMtD,OAAOM,QAM3B,IAJCoD,EAAYV,aAAelC,QAAQC,IAAI,CACpC/B,EAAAA,EAAgB4E,kBAAkBtD,MAGlCoD,EAAYV,MAEZ,MADAQ,EAAOtB,KAAK,CAAE2B,KAAM,aACd,CAACvE,IAAK,+BAAgCC,MAAOmE,EAAYV,MAIvE,CAAE,MAAOzD,GAEL,MADAuE,QAAQvE,MAAM,oDAAqDA,GAC7DA,CACV,KAIJ,MAAMwE,EAAiBA,KAEnBP,EAAOtB,KAAK,CAAE2B,KAAM,gBAAgB,EAKlCG,EAAQA,KACNlF,EAAUmF,SAGVT,EAAOtB,KAAK,CAAE2B,KAAM,YAFpBL,EAAOtB,KAAK,CAAE2B,KAAM,SAEW,E,o1CCnIvC,MAAMR,EAAc,EAEpB,O","sources":["webpack://market/./src/services/products.service.js","webpack://market/./src/components/BtnAddLess.vue","webpack://market/./src/components/BtnAddLess.vue?11fb","webpack://market/./src/views/ProductDetailView.vue","webpack://market/./src/views/ProductDetailView.vue?a9ce"],"sourcesContent":["import { apiService } from \"@/services/api.service.js\";\r\nimport { useAuthStore } from \"@/store/authStore\";\r\n\r\nconst authStore = useAuthStore();\r\n\r\nexport const productsService = {\r\n\r\n    // allProducts\r\n    async allProducts() {\r\n        let url = `/marketplace-items`\r\n        try {\r\n            let res = await apiService.request({ url })\r\n            if(!res) throw {msg: 'Error en la solicitud de los productos',error: res};\r\n\r\n            return res;\r\n\r\n        } catch (error) {            \r\n            let errorMessage = `Error ${error.response?.status}: ${error.response?.statusText}\\nURL: ${url}\\nResponse data: ${JSON.stringify(error.response?.data)}`;\r\n            throw new Error(errorMessage);\r\n        }\r\n    },\r\n\r\n    // search-by-criteria\r\n    async searchProduct(params) {\r\n        let url = `/marketplace-items/search-by-criteria`\r\n        try {\r\n\r\n            if(!authStore.token) authStore.getToken()\r\n\r\n            let options = {\r\n                url,\r\n                method: 'post',\r\n                token: authStore.token,\r\n                data: params\r\n            }\r\n            // console.log(options)\r\n\r\n            let res = await apiService.request(options)\r\n            // console.log(res)\r\n            if(!res) throw {msg: 'Error en la solicitud del producto',error: res};\r\n\r\n            return res;\r\n\r\n        } catch (error) {            \r\n            let errorMessage = `Error ${error.response?.status}: ${error.response?.statusText}\\nURL: ${url}\\nResponse data: ${JSON.stringify(error.response?.data)}`;\r\n            throw new Error(errorMessage);\r\n        }\r\n    },\r\n\r\n    // getProduct by Id\r\n    async getProductId(id) {\r\n        let url = `/marketplace-items/${id}`\r\n        try {\r\n    \r\n            if(!authStore.token) authStore.getToken()\r\n\r\n            let options = {\r\n                url,\r\n                token: authStore.token\r\n            }\r\n            let res = await apiService.request(options)\r\n            if(!res) throw {msg: 'Error en la solicitud del producto',error: res};\r\n\r\n            return res;\r\n\r\n        } catch (error) {            \r\n            let errorMessage = `Error ${error.response?.status}: ${error.response?.statusText}\\nURL: ${url}\\nResponse data: ${JSON.stringify(error.response?.data)}`;\r\n            throw new Error(errorMessage);\r\n        }\r\n    },\r\n\r\n    // getProduct by keyword\r\n    async getProductKeyword(keyword) {\r\n\r\n        if(!authStore.token) authStore.getToken()\r\n\r\n        let options = {\r\n            url: '/marketplace-items/search-by-criteria',\r\n            method: 'post',\r\n            token: authStore.token,\r\n            data: { keyword: keyword }\r\n        }\r\n        \r\n        try {\r\n            let res = await apiService.request(options)\r\n            if(!res) throw {msg: 'Error en la solicitud del producto',error: res};\r\n\r\n            return res;\r\n\r\n        } catch (error) {            \r\n            let errorMessage = `Error ${error.response?.status}: ${error.response?.statusText}\\nURL: ${options.url}\\nResponse data: ${JSON.stringify(error.response?.data)}`;\r\n            throw new Error(errorMessage);\r\n        }\r\n    },\r\n\r\n    // getProducts\r\n    async getProducts(list) {        \r\n        try {\r\n            let promises = list.map(el => this.getProductId(el.id));\r\n            let listProducts = await Promise.all(promises);\r\n    \r\n            if(listProducts.length === 0) throw {msg: 'Error en la funciÃ³n getProducts'};\r\n            return listProducts;\r\n    \r\n        } catch (error) {            \r\n            let errorMessage = `Error ${error.response?.status}: ${error.response?.statusText}\\nResponse data: ${JSON.stringify(error.response?.data)}`;\r\n            throw new Error(errorMessage);\r\n        }\r\n    },\r\n\r\n    // mergeCartWithList\r\n    mergeCartWithList(list,cart) {        \r\n        try {\r\n            list.forEach(product => {\r\n                cart.forEach(item => {\r\n                    if (product.id === item.id) {\r\n                        product.count = item.count;\r\n                    }\r\n                });\r\n            });\r\n            return list;\r\n    \r\n        } catch (error) {            \r\n            let errorMessage = {msg: 'Error en mergeCartWithList', error};\r\n            throw new Error(errorMessage);\r\n        }\r\n    },  \r\n\r\n    // getProductsWithPrice\r\n    getProductsWithPrice(list) {        \r\n        try {\r\n            \r\n            const prod = [];\r\n            list.forEach(product => {\r\n                const item = product;\r\n                const newItem = {\r\n                    marketplace_item_id: item.id,\r\n                    date: new Date().toISOString().slice(0,10),\r\n                    cant: item.count,\r\n                    price: (item.count * item.price).toString()\r\n                  };\r\n                  prod.push(newItem);               \r\n            });\r\n\r\n            return prod;\r\n\r\n        } catch (error) {            \r\n            let errorMessage = {msg: 'Error en mergeCartWithList', error};\r\n            throw new Error(errorMessage);\r\n        }\r\n    }, \r\n\r\n    // getTotalPriceOfAllProducts\r\n    getTotalPriceOfAllProducts(list) {        \r\n        try {\r\n            let totalPrice = 0;\r\n            list.forEach(product => {\r\n                    totalPrice += product.count*product.price                \r\n            });\r\n            return totalPrice;\r\n    \r\n        } catch (error) {            \r\n            let errorMessage = {msg: 'Error en mergeCartWithList', error};\r\n            throw new Error(errorMessage);\r\n        }\r\n    },  \r\n    \r\n\r\n};\r\n\r\n","<template>\r\n    <div class=\"flex items-center justify-between rounded-lg\">\r\n        <button class=\"rounded-l-lg bg-gray-300 w-8\" @click=\"lessCarToStore()\">-</button>\r\n        <div class=\"w-8 text-gray-800\" :class=\"{'scale-150 transition-transform animate-spin': animationPrice}\">{{ count }}</div>\r\n        <button class=\"rounded-r-lg bg-gray-300 w-8\" @click=\"addCarToStore()\">+</button>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport { useCartStore } from '@/store/cartStore'\r\nimport { ref,defineProps,defineEmits,computed } from 'vue'\r\n\r\nconst emits = defineEmits(['updCart'])\r\nconst shop = useCartStore()\r\nconst animationPrice = ref(false)\r\nconst props = defineProps({\r\n  item: Object\r\n})\r\n\r\nconst addCarToStore = () => {\r\n  handleUpdCart()\r\n  shop.addProduct(props.item)\r\n  emits('updCart')\r\n}\r\nconst lessCarToStore = () => {\r\n  handleUpdCart()\r\n  shop.removeProduct(props.item)\r\n  emits('updCart')\r\n}\r\n\r\nconst handleUpdCart = () => {\r\n    animationPrice.value = true\r\n    setTimeout(()=>{\r\n        animationPrice.value = false\r\n    },500)\r\n}\r\n\r\nconst count = computed(() => {\r\n  const product = shop.prods.find(product => product.id === props.item.id)\r\n  return product ? product.count : 0\r\n})\r\n</script>","import script from \"./BtnAddLess.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BtnAddLess.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <MainLayout>\r\n        <article v-if=\"productsAPI[0]\" class=\"flex w-full flex-col md:flex-row\">\r\n                        \r\n                <figure class=\"flex w-full h-auto md:w-1/2\">\r\n                    <img :src=\"productsAPI[0].src\" alt=\"\">\r\n                </figure>\r\n\r\n                <!-- Detalles del Producto -->\r\n                <div class=\"w-full md:w-5/12\">\r\n                    <!-- Title -->\r\n                    <h3 class=\"text-justify font-bold text-2xl my-10 text-sky-800 capitalize\">{{ productsAPI[0].alias }}</h3>\r\n\r\n                    <!-- Price -->\r\n                    <div class=\"flex gap-5 mb-10\">\r\n                        <div class=\"text-amber-400 font-bold text-3xl\">${{ productsAPI[0].price }}</div>\r\n                        <!-- <div class=\"line-through\">${{ productsAPI[0].price_discount }}</div> -->\r\n                    </div>\r\n\r\n                    <!-- Descripcion -->\r\n                    <div class=\"text-justify mb-10 grid grid-cols-1 gap-2\">\r\n                        <p class=\"font-bold\">Descripcion: </p>\r\n                        <p class=\"leading-7\" v-text=\"productsAPI[0].description\"></p>\r\n                    </div>\r\n\r\n                    <!-- Cart -->\r\n                    <div class=\"flex flex-col px-2 gap-8 justify-start mb-10\">\r\n\r\n                        <!-- Caracteristicas -->\r\n                        <div class=\"flex gap-5\">\r\n                            <!-- <router-link :to=\"{name: 'ListProduct',params: { category: product.category}}\" class=\"text-sm text-amber-800 bg-amber-200 px-3 py-2 rounded-lg my-5\" >{{ product.category }}</router-link> -->\r\n                            <router-link :to=\"{name: 'ListProduct',params: { keyword: productsAPI[0].marketplace_categories[0].alias}}\" class=\"text-sm text-amber-800 bg-amber-200 px-3 py-2 rounded-lg my-5\" >{{ productsAPI[0].marketplace_categories[0].alias }}</router-link>\r\n                        </div>\r\n                            \r\n                        <!-- Not Available -->\r\n                        <div class=\"flex gap-5 items-center\" v-if=\"!productsAPI[0].active\">\r\n                            <div class=\"bg-gray-300 text-gray-800 px-5 py-2 rounded-lg w-60\" >No Disponible</div>\r\n                            <button title=\"lo deseo\"><i class=\"fas fa-heart text-red-500 fa-lg hover:scale-125\"></i></button>\r\n                        </div>                        \r\n\r\n                        <!-- Available -->\r\n                        <div class=\"flex flex-col md:flex-row gap-8 justify-between items-start md:items-center\" v-else>\r\n                            \r\n                            <btn-add-less :item=\"productsAPI[0]\"/>\r\n                            \r\n                            <!-- Add Less -->\r\n                            <button class=\"bg-amber-400 px-5 py-2 rounded-lg text-gray-800 w-full md:w-4/12\" @click=\"navigateToCart\" v-if=\"productsAPI[0].active\">AÃ±adir</button>\r\n                            <!-- Add Less -->\r\n                            <button class=\"bg-gray-300 px-5 py-2 rounded-lg text-gray-800 w-full md:w-4/12\" :disabled=\"!productsAPI[0].active\" v-else >AÃ±adir</button>\r\n                            <!-- Pagar -->\r\n                            <button class=\"bg-amber-400 px-5 py-2 rounded-lg text-gray-800 w-full md:w-8/12\" @click=\"goBuy\">Pagar</button>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                </div>  \r\n            \r\n        </article>\r\n    </MainLayout>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport { onBeforeMount, ref } from 'vue';\r\nimport MainLayout from '@/layouts/MainLayout.vue'\r\nimport BtnAddLess from '@/components/BtnAddLess'\r\nimport { useRoute,useRouter } from 'vue-router'\r\nimport { productsService } from '@/services/products.service'\r\nimport {useAuthStore} from \"@/store/authStore\"\r\n\r\nconst authStore = useAuthStore();\r\n\r\nconst route = useRoute()\r\nconst router = useRouter()\r\n\r\n// const productList = [\r\n//     {id: 1,name: 'title1', category: 'category1', price_discount: 200, price: 123, src: require('@/assets/images/1.jpeg'), available: true},\r\n//     {id: 2,name: 'title2', category: 'category2', price_discount: 200, price: 123, src: require('@/assets/images/1.jpeg'), available: true},\r\n//     {id: 3,name: 'title3', category: 'category3', price_discount: 200, price: 123, src: require('@/assets/images/2.jpeg'), available: false},\r\n//     {id: 4,name: 'title4', category: 'category4', price_discount: 200, price: 123, src: require('@/assets/images/1.jpeg'), available: true},\r\n//     {id: 5,name: 'title5', category: 'category5', price_discount: 200, price: 123, src: require('@/assets/images/2.jpeg'), available: false},\r\n//     {id: 6,name: 'title6', category: 'category6', price_discount: 200, price: 123, src: require('@/assets/images/1.jpeg'), available: true},\r\n//     {id: 7,name: 'title7', category: 'category7', price_discount: 200, price: 123, src: require('@/assets/images/2.jpeg'), available: false},\r\n//     {id: 8,name: 'title8', category: 'category8', price_discount: 200, price: 123, src: require('@/assets/images/1.jpeg'), available: true},\r\n//     {id: 9,name: 'title9', category: 'category9', price_discount: 200, price: 123, src: require('@/assets/images/2.jpeg'), available: false},\r\n//     {id: 10,name: 'title10', category: 'category10', price_discount: 200, price: 123, src: require('@/assets/images/1.jpeg'), available: true},\r\n//     {id: 11,name: 'title11', category: 'category11', price_discount: 200, price: 123, src: require('@/assets/images/1.jpeg'), available: true},\r\n//     {id: 12,name: 'title12', category: 'category12', price_discount: 200, price: 123, src: require('@/assets/images/1.jpeg'), available: true},\r\n//     {id: 13,name: 'title13', category: 'category13', price_discount: 200, price: 123, src: require('@/assets/images/1.jpeg'), available: true}]\r\n\r\n\r\n// const product = ref([]);\r\nconst productsAPI   = ref([])\r\n\r\n// onBeforeMount(() => {\r\n    //   product.value = productList.find(el => el.name === productTitle);\r\n    //   if (!product.value) {\r\n//     router.push({ name: 'NotFound' });\r\n//   }\r\n// });\r\n\r\nonBeforeMount(async () => {\r\n    try {\r\n        let keyword = route.params.keyword;\r\n\r\n        [productsAPI.value] = await Promise.all([         \r\n            productsService.getProductKeyword(keyword)\r\n        ]);\r\n        \r\n        if(!productsAPI.value){\r\n            router.push({ name: 'NotFound' });\r\n            throw {msg: 'Error en obtener el producto' ,error: productsAPI.value}\r\n        }\r\n        \r\n\r\n    } catch (error) {\r\n        console.error(\"Error al obtener las categorÃ­as o los productos: \", error);\r\n        throw error\r\n    }\r\n});\r\n\r\n\r\nconst navigateToCart = () => {\r\n    \r\n    router.push({ name: 'ShoppingCart'})\r\n    \r\n}\r\n\r\n\r\nconst goBuy = () => {\r\n    if(!authStore.is_login)\r\n        router.push({ name: 'Login'})\r\n    else\r\n        router.push({ name: 'BuyForm'})\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n</style>","import script from \"./ProductDetailView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProductDetailView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["authStore","useAuthStore","productsService","async","url","res","apiService","request","msg","error","errorMessage","response","status","statusText","JSON","stringify","data","Error","params","token","getToken","options","method","id","keyword","list","promises","map","el","this","getProductId","listProducts","Promise","all","length","mergeCartWithList","cart","forEach","product","item","count","getProductsWithPrice","prod","newItem","marketplace_item_id","date","Date","toISOString","slice","cant","price","toString","push","getTotalPriceOfAllProducts","totalPrice","shop","useCartStore","animationPrice","ref","addCarToStore","handleUpdCart","addProduct","props","emits","lessCarToStore","removeProduct","value","setTimeout","computed","prods","find","__exports__","route","useRoute","router","useRouter","productsAPI","onBeforeMount","getProductKeyword","name","console","navigateToCart","goBuy","is_login"],"sourceRoot":""}