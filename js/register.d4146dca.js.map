{"version":3,"file":"js/register.d4146dca.js","mappings":"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","sources":["webpack://market/./src/services/gender.service.js","webpack://market/./src/views/auth/RegisterView.vue","webpack://market/./src/views/auth/RegisterView.vue?ac36"],"sourcesContent":["import { apiService } from \"@/services/api.service.js\";\r\n\r\n\r\nexport const genderService = {\r\n\r\n    // allCountries\r\n    async all() {\r\n        let url = `/gender`\r\n        try {\r\n            let res = await apiService.request({ url })\r\n            if(!res) throw {msg: 'Error en la solicitud de las gender',error: res};\r\n\r\n            return res;\r\n\r\n        } catch (error) {            \r\n            let errorMessage = `Error ${error.response?.status}: ${error.response?.statusText}\\nURL: ${url}\\nResponse data: ${JSON.stringify(error.response?.data)}`;\r\n            throw new Error(errorMessage);\r\n        }\r\n    },        \r\n\r\n    // getSimpleList\r\n    async getSimpleList() {\r\n        let url = `/gender`\r\n        try {\r\n            let res = await apiService.request({ url })\r\n            if(!res) throw {msg: 'Error en la solicitud de los gender',error: res};\r\n\r\n            const list = [];\r\n            for (let item of res) {\r\n                 \r\n                const option = {\r\n                    value: item.id,\r\n                    text: item.alias\r\n                };\r\n                \r\n                list.push(option);\r\n            }\r\n\r\n            return list;\r\n\r\n        } catch (error) {            \r\n            let errorMessage = `Error ${error.response?.status}: ${error.response?.statusText}\\nURL: ${url}\\nResponse data: ${JSON.stringify(error.response?.data)}`;\r\n            throw new Error(errorMessage);\r\n        }\r\n    },\r\n  \r\n};","<template>\r\n    <MainLayout>      \r\n              \r\n      <section class=\"flex flex-col lg:flex-row w-full justify-between bg-white p-5 mb-4 gap-10\">\r\n  \r\n        <figure class=\"w-full flex justify-center bg-contain\">\r\n          <img src=\"http://via.placeholder.com/640x360\" alt=\"\">\r\n        </figure>\r\n  \r\n        <form class=\"flex flex-col items-center justify-center w-full\" @submit=\"sendRequest\">\r\n\r\n          <!-- Title -->\r\n          <div class=\"mb-5 w-full\">\r\n            <h4>Registrarse</h4>\r\n          </div>\r\n          \r\n          \r\n          <div class=\"flex flex-col md:flex-row gap-5 w-full mb-2\">\r\n\r\n              <!-- Nombre -->\r\n              <div class=\"w-full mb-2\">\r\n                <input class=\"input_form\"\r\n                :class=\"{ 'input_form_error': errors.first_name}\"\r\n                v-model=\"form.first_name\"\r\n                @input=\"validateNameRules\"\r\n                type=\"text\"\r\n                placeholder=\"Nombre*\">\r\n                <span class=\"span_error\">{{ errors.first_name }}</span>\r\n              </div>\r\n    \r\n              <!-- Apellidos -->\r\n              <div class=\"w-full mb-2\">\r\n                <input class=\"input_form\"\r\n                :class=\"{ 'input_form_error': errors.last_name}\"\r\n                v-model=\"form.last_name\"\r\n                @input=\"validateLastNameRules\"\r\n                type=\"text\"\r\n                placeholder=\"Apellidos*\">\r\n                <span class=\"span_error\">{{ errors.last_name }}</span>\r\n              </div>\r\n\r\n          </div>\r\n\r\n\r\n          <div class=\"flex flex-col md:flex-row gap-5 w-full mb-2\">\r\n            \r\n            <!-- Email -->\r\n            <div class=\"w-full  mb-2\">\r\n              <input class=\"input_form\"\r\n              :class=\"{ 'input_form_error': errors.email}\"\r\n              v-model=\"form.email\"\r\n              @input=\"validateEmailRules\"\r\n              type=\"email\"\r\n              placeholder=\"Email*\">\r\n              <span class=\"span_error\">{{ errors.email }}</span>\r\n            </div>\r\n\r\n            <!-- Phone -->\r\n            <div class=\"w-full  mb-2\">\r\n              <input class=\"input_form\"\r\n              :class=\"{ 'input_form_error': errors.phone}\"\r\n              v-model=\"form.phone\"\r\n              @input=\"validatePhoneRules\"\r\n              type=\"tel\"\r\n              placeholder=\"Teléfono*\">\r\n              <span class=\"span_error\">{{ errors.phone }}</span>\r\n            </div>\r\n            \r\n          </div>\r\n\r\n\r\n          <div class=\"flex flex-col md:flex-row gap-5 w-full mb-2\">\r\n              \r\n              <!-- Password -->\r\n              <div class=\"w-full  mb-2\">\r\n                <input class=\"input_form\"\r\n                :class=\"{ 'input_form_error': errors.password}\"\r\n                v-model=\"form.password\"\r\n                @input=\"validatePassword\"\r\n                type=\"password\"\r\n                placeholder=\"Contraseña*\">\r\n                <span class=\"span_error\">{{ errors.password }}</span>\r\n              </div>\r\n\r\n              <!-- Confirmacion Password -->\r\n              <div class=\"w-full  mb-2\">\r\n                <input class=\"input_form\"\r\n                :class=\"{ 'input_form_error': errors.confirm_password}\"\r\n                v-model=\"form.confirm_password\"\r\n                @input=\"validateConfirmPassword\"\r\n                type=\"password\"\r\n                placeholder=\"Confirme la contraseña*\">\r\n                <span class=\"span_error\">{{ errors.confirm_password }}</span>\r\n              </div>\r\n\r\n          </div>\r\n\r\n\r\n          <div class=\"flex flex-col md:flex-row gap-5 w-full mb-2\">\r\n              \r\n              <!-- Country -->\r\n              <div class=\"w-full mb-2\">\r\n                <model-select :options=\"countries\"\r\n                    placeholder=\"País*\"\r\n                    v-model=\"form.country\"                    \r\n                    required\r\n                    class=\"input_form\"\r\n                    :class=\"{'input_form_error': errors.country}\">\r\n                </model-select>\r\n                <span class=\"span_error\">{{ errors.country }}</span>\r\n              </div>\r\n\r\n              <!-- zip_code -->\r\n              <div class=\"w-full  mb-2\">\r\n                <input class=\"input_form\"\r\n                :class=\"{ 'input_form_error': errors.confirm_password}\"\r\n                v-model=\"form.zip_code\"\r\n                @input=\"validateConfirmPassword\"\r\n                type=\"text\"\r\n                placeholder=\"Código postal\">\r\n                <span class=\"span_error\">{{ errors.confirm_password }}</span>\r\n              </div>\r\n\r\n          </div>\r\n\r\n\r\n          <div class=\"flex flex-col md:flex-row gap-5 w-full mb-2\">\r\n\r\n              <!-- Province -->\r\n              <div class=\"w-full  mb-2\">\r\n                <model-select :options=\"provinces\"\r\n                        placeholder=\"Provincia*\"\r\n                        v-model=\"form.province\"\r\n                        @searchchange=\"updProvince\"\r\n                        required\r\n                        class=\"input_form\"\r\n                        :class=\"{'input_form_error': errors.province}\">\r\n                </model-select>\r\n                <span class=\"span_error\">{{ errors.province }}</span>\r\n              </div>\r\n\r\n              <!-- City -->\r\n              <div class=\"w-full  mb-2\">\r\n                <div class=\"py-6 text-3xl\" v-show=\"loadingCities\">\r\n                    <i class=\"fa fa-spinner fa-pulse\"></i>\r\n                </div>\r\n                <model-select \r\n                  :options=\"cities\"\r\n                  v-show=\"!loadingCities\"\r\n                  v-model=\"form.city\"\r\n                  placeholder=\"Municipio*\"\r\n                  required                                        \r\n                  class=\"input_form\"\r\n                  :class=\"{'input_form_error': errors.city}\">\r\n                </model-select>\r\n                <span class=\"span_error\">{{ errors.city }}</span>\r\n              </div>              \r\n\r\n          </div>\r\n\r\n          <div class=\"flex flex-col md:flex-row gap-5 w-full mb-2\">\r\n\r\n            <!-- Address -->\r\n            <div class=\"w-full mb-2\">\r\n                <input class=\"input_form\"\r\n                :class=\"{ 'input_form_error': errors.address}\"\r\n                v-model=\"form.address\"\r\n                type=\"text\"\r\n                placeholder=\"Dirección\">\r\n                <span class=\"span_error\">{{ errors.address }}</span>\r\n            </div>\r\n\r\n            <!-- Gender -->\r\n            <div class=\"w-full mb-2\">\r\n              <model-select \r\n                :options=\"genders\"\r\n                v-model=\"form.gender\"\r\n                placeholder=\"Genero*\"\r\n                required                                        \r\n                class=\"input_form\"\r\n                :class=\"{'input_form_error': errors.gender}\">\r\n              </model-select>\r\n                <span class=\"span_error\">{{ errors.gender }}</span>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <!-- <div class=\"flex justify-items-start mb-2 w-full gap-2\">\r\n            <input type=\"checkbox\" >\r\n            <label>Agencia</label>\r\n          </div>\r\n\r\n          <div class=\"flex flex-col md:flex-row gap-5 w-full mb-2\">\r\n\r\n              \r\n              <div class=\"w-full  mb-2\">\r\n                <input class=\"input_form\"\r\n                :class=\"{ 'input_form_error': errors.confirm_password}\"\r\n                v-model=\"form.confirm_password\"\r\n                @input=\"validateConfirmPassword\"\r\n                type=\"text\"\r\n                placeholder=\"i_a_t_a\">\r\n                <span class=\"span_error\">{{ errors.confirm_password }}</span>\r\n              </div>\r\n\r\n              \r\n              <div class=\"w-full  mb-2\">\r\n                <input class=\"input_form\"\r\n                :class=\"{ 'input_form_error': errors.password}\"\r\n                v-model=\"form.password\"\r\n                @input=\"validatePassword\"\r\n                type=\"text\"\r\n                placeholder=\"Company\">\r\n                <span class=\"span_error\">{{ errors.password }}</span>\r\n              </div>              \r\n\r\n          </div> -->\r\n    \r\n\r\n        \r\n          \r\n          <!-- Enviar -->\r\n          <div class=\"flex items-center justify-end mb-5 w-full\">                \r\n              <button class=\"bg-sky-800 hover:bg-sky-800/80 text-white font-bold py-2 px-4 rounded\" type=\"submit\"\r\n              @click=\"sendRequest\">\r\n              Enviar\r\n              </button>\r\n          </div>\r\n          \r\n\r\n        </form>        \r\n  \r\n      </section>\r\n    </MainLayout>\r\n  </template>\r\n  \r\n<script setup>\r\nimport MainLayout from '@/layouts/MainLayout.vue'\r\nimport { ref,onBeforeMount,watch } from \"vue\";\r\nimport useFormValidation  from '@/composables/validation'\r\n\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { ModelSelect } from 'vue-search-select';\r\nimport 'vue-search-select/dist/VueSearchSelect.css';\r\nimport { provincesService } from '@/services/provinces.service';\r\nimport { citiesService } from '@/services/cities.service';\r\nimport { genderService } from '@/services/gender.service';\r\nimport { countriesService } from '@/services/country.service';\r\nimport {useAuthStore} from \"@/store/authStore\"\r\n\r\nconst authStore = useAuthStore();\r\n\r\nconst { validateOnlyText,validatePhone,validateEmail } = useFormValidation()\r\n\r\nconst errors = ref({})\r\nconst countries = ref([])\r\nconst provinces = ref([])\r\nconst genders = ref([])\r\nconst cities = ref([])\r\nconst loadingCities = ref(false)\r\n\r\nconst form = ref({\r\n    first_name: '',\r\n    last_name: '',\r\n    email: '',\r\n    phone: '',\r\n    password: '',\r\n    confirm_password: '',\r\n    country: '',\r\n    zip_code: '',\r\n    province: '',\r\n    city: '',\r\n    address: '',\r\n    gender: '',\r\n    is_travel_agency: false,\r\n    i_a_t_a: '',\r\n    company: '',\r\n    confirmation_link: '/verify-user',\r\n    roles: [9]\r\n  });\r\n\r\n// carga inicial\r\nonBeforeMount(async () => {\r\n    \r\n    const results = await Promise.all([\r\n      countriesService.getSimpleList(),\r\n      provincesService.getSimpleList(),\r\n      genderService.getSimpleList(),\r\n    ]);\r\n\r\n    countries.value = results[0];\r\n    provinces.value = results[1];\r\n    genders.value = results[2];\r\n})\r\n\r\n\r\n// Cada vez que se cambia la provincia se actualiza el municipio\r\nconst updProvince = async () => {    \r\n    try {\r\n        loadingCities.value = true\r\n        cities.value = await citiesService.getSimpleList(form.value.province)\r\n        \r\n    } catch (error) {        \r\n        console.log(error)\r\n    }finally{\r\n        loadingCities.value = false        \r\n    }\r\n}\r\n\r\n// Se observa la provincia\r\nwatch(() => form.value.province, () => {\r\n    updProvince();\r\n});\r\n\r\n// valida que todos los campos requeridos este llenos\r\nconst validateRequired = (requiredList) => {\r\n    let validateRulesRequired = true\r\n    requiredList.forEach((el) => {\r\n        if(!form.value[el]) {\r\n            errors.value[el] = 'El campo es requerido'\r\n            validateRulesRequired = false\r\n        }\r\n        else errors.value[el] = ''\r\n    })\r\n\r\n    return validateRulesRequired;  \r\n}\r\n\r\n// valida ademas el formato y tipo de dato\r\nconst validateField = (fieldName, validator, errorMessage) => {\r\n  if (!validator(form.value[fieldName]) && form.value[fieldName] !== '') {\r\n    errors.value[fieldName] = errorMessage\r\n    return true\r\n  }\r\n  errors.value[fieldName] = ''\r\n  return false\r\n}\r\n\r\nconst validatePassword = () => {\r\n  if(form.value.password.length > 20) {\r\n    errors.value['password'] = 'El campo es muy largo';\r\n  } else {\r\n    errors.value['password'] = '';\r\n  }\r\n  validateConfirmPassword();\r\n};\r\n\r\nconst validateConfirmPassword = () => {\r\n  if(form.value.password !== form.value.confirm_password) {\r\n    errors.value['confirm_password'] = 'Los password no son iguales';\r\n  } else {\r\n    errors.value['confirm_password'] = '';\r\n  }\r\n};\r\n\r\n//<!-- TODO add mas validaciones \r\nlet validateNameRules     = () => validateField('first_name', validateOnlyText, 'El nombre no es válido');\r\nlet validateLastNameRules = () => validateField('last_name', validateOnlyText, 'El apellido no es válido');\r\nlet validateEmailRules    = () => validateField('email', validateEmail, 'El email no es válido');\r\nlet validatePhoneRules    = () => validateField('phone', validatePhone, 'El teléfono no es válido');\r\n\r\n\r\nconst convertObj = (obj) => {\r\n\r\n  const ob = JSON.parse(JSON.stringify(obj))\r\n\r\n    const newObj = {\r\n        ...ob,        \r\n        gender_id: ob.gender,\r\n        country_id: ob.country,\r\n        password: authStore.encryptPass(ob.password)\r\n    };\r\n\r\n    // Eliminar claves no deseadas\r\n    delete newObj.confirm_password;\r\n    delete newObj.gender;\r\n    delete newObj.country;\r\n\r\n    return newObj;\r\n};\r\n\r\nconst sendRequest = async (e) => {\r\n  e.preventDefault();\r\n\r\n  // Campos requeridos\r\n  let requiredList = [\r\n    'first_name',\r\n    'last_name',\r\n    'email',\r\n    'phone',\r\n    'password',\r\n    'confirm_password',\r\n    'country',\r\n    'zip_code',\r\n    'province',\r\n    'city',\r\n    'address',\r\n    'gender',\r\n  ];\r\n\r\n  if(!validateRequired(requiredList)) \r\n    return Swal.fire({\r\n      title: 'Validación',\r\n      text: `Error de validación`,\r\n      icon: 'error',\r\n      confirmButtonColor: '#3085d6',                            \r\n    }) \r\n\r\n  let data = convertObj(form.value)\r\n  try {\r\n    let registro = await authStore.register(data)\r\n    \r\n    if (registro) \r\n      \r\n      return Swal.fire({\r\n        title: 'Confirmación',\r\n        text: `Se realiza el registro exitosamente, revise su correo`,\r\n        icon: 'success',\r\n        confirmButtonColor: '#3085d6',                            \r\n      }) \r\n\r\n    return Swal.fire({\r\n      title: 'Error',\r\n      text: `Error en la acción de registro, revise los datos e intentelo de nuevo`,\r\n      icon: 'error',\r\n      confirmButtonColor: '#3085d6',                            \r\n    }) \r\n    \r\n    \r\n  } catch (error) {\r\n    console.log(error)\r\n    return Swal.fire({\r\n      title: 'Error',\r\n      text: `Error en la acción de registro, revise los datos e intentelo de nuevo`,\r\n      icon: 'error',\r\n      confirmButtonColor: '#3085d6',                            \r\n    }) \r\n    \r\n  }\r\n\r\n}\r\n\r\n</script>\r\n  <style scoped>\r\n  .input_form {\r\n    @apply flex w-full border border-gray-300 rounded-lg px-5 py-2 placeholder-gray-400 text-sky-800\r\n    focus:ring-1 focus:border-sky-600 focus:outline-none;\r\n  }\r\n\r\n  .input_form_error {\r\n    @apply flex w-full text-red-500 rounded-lg px-5 py-2 border border-red-500 \r\n    focus:border-transparent focus:ring-1 focus:ring-red-500 focus:border-red-500 focus:outline-none \r\n    focus:invalid:border-red-500 focus:invalid:ring-red-500\r\n    disabled:bg-slate-50 disabled:text-slate-500 disabled:border-slate-200 disabled:shadow-none\r\n    placeholder-red-500\r\n    invalid:border-red-500 invalid:text-red-500;\r\n}\r\n\r\n.span_error{\r\n  @apply text-red-500 text-sm;\r\n}\r\n\r\n</style>","import script from \"./RegisterView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RegisterView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./RegisterView.vue?vue&type=style&index=0&id=ae46ca50&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-ae46ca50\"]])\n\nexport default __exports__"],"names":["genderService","async","url","res","apiService","request","msg","error","errorMessage","response","status","statusText","JSON","stringify","data","Error","list","item","option","value","id","text","alias","push","authStore","useAuthStore","validateOnlyText","validatePhone","validateEmail","useFormValidation","errors","ref","countries","provinces","genders","cities","loadingCities","form","first_name","last_name","email","phone","password","confirm_password","country","zip_code","province","city","address","gender","is_travel_agency","i_a_t_a","company","confirmation_link","roles","onBeforeMount","results","Promise","all","countriesService","getSimpleList","provincesService","updProvince","citiesService","console","log","watch","validateRequired","requiredList","validateRulesRequired","forEach","el","validateField","fieldName","validator","validatePassword","length","validateConfirmPassword","validateNameRules","validateLastNameRules","validateEmailRules","validatePhoneRules","convertObj","obj","ob","parse","newObj","gender_id","country_id","encryptPass","sendRequest","e","preventDefault","Swal","title","icon","confirmButtonColor","registro","register","__exports__"],"sourceRoot":""}